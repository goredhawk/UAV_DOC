int main(void) 
 -> HAL_Init(); 
    ->  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
	->  HAL_InitTick(TICK_INT_PRIORITY); /* Init the low level hardware */
 -> SystemClock_Config();
 -> MX_GPIO_Init();
 FCLink_Msg_Init(38400);  //初始化串口1，连接飞控
 
 
 
 串口初始化:
 
  huart1.Instance = USART1;
  huart1.Init.BaudRate = Baud;
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
  huart1.Init.StopBits = UART_STOPBITS_1;
  huart1.Init.Parity = UART_PARITY_NONE;
  huart1.Init.Mode = UART_MODE_TX_RX;
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
	HAL_UART_Init(&huart1);
	
	HAL_UART_Receive_IT(&huart1, &RxBuf, 1);			//使能UART1的接收非空中?

#include "Regtarge.h" 文件
	
int fputc(int ch, FILE *f) 
	return (SendChar(ch)); 
	  -> USART1_UART_Write((uint8_t *)(&ch), 1);
	     -> HAL_UART_Transmit(&huart1, pData, Length, 100);   //串口1输出调试信息


串口接收：

USART1_IRQHandler
 -> HAL_UART_IRQHandler(&huart1);
    -> tmp_flag = __HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE);  // 接收完成标志置1 
	  tmp_it_source = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
	  /* UART in mode Receiver -------------------------*/
	  if((tmp_flag != RESET) && (tmp_it_source != RESET))
	  { 
		UART_Receive_IT(huart);
	  }
	-> UART_IT_TXE      // 判断是这个标志位不？ 
	-> UART_FLAG_TC     // 判断是这个标志位不？
	
static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma) 
    -> HAL_UART_RxCpltCallback(huart);  // DMA接收完成标志位 
	
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
   -> USART1_RxCpltCallback(&Data, 1); // 中断接收完成标志位
